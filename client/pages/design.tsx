import Head from "next/head";
import { useRouter } from "next/router";
import { useCallback, useEffect, useState } from "react";
import ContestCreator from "../components/contest/contest-creator";
import UserCreator from "../components/creator/user-creator";
import Editor from "../components/editor/editor";
import UpdateForm from "../components/editor/updateForm";
import Header, { useUser } from "../components/header/header";
import ExamList from "../components/list/exam-list";
import UserList from "../components/list/user-list";
import LoadingScreen from "../components/loading/loading";
import MenuBar from "../components/menu/menu";
import { useAuth } from "../hooks/auth.hook";

function DesignPage() {
    const [tab, setTab] = useState(0)

    const [selectedFormId, setSelectedFormId] = useState<number | undefined>()

    const router = useRouter()
    const { accessToken, loading } = useAuth()
    const { user, isLoading, isError } = useUser(accessToken)

    useEffect(() => {
        if ((!user && isError) || (!loading && !accessToken)) {
            router.push("/login")
        }
    }, [user, isError, loading, accessToken])

    const onTabChange = useCallback((tab: number) => {
        setTab(tab)
    }, [])

    const onSelectForm = useCallback((id: number | undefined) => {
        setSelectedFormId(id)
        setTab(2)
    }, [])

    const renderTabPanel = () => {
        switch (tab) {
            case 0:
                return <ExamList onSelectForm={onSelectForm} selectedFormId={selectedFormId} />;

            case 1:
                return <Editor />;

            case 2:
                return <UpdateForm id={selectedFormId} />;

            case 3:
                return <UserList />

            case 4:
                return <UserCreator />

            case 5: 
                return <ContestCreator />

            default:
                return;
        }
    }

    if (!user || isLoading) {
        return <LoadingScreen />
    }

    return (
        <>
            <Head>
                <title>Design Page</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main style={{ background: "#eee", paddingTop: 56, paddingBottom: 56, minHeight: '100vh' }}>
                <Header />
                <MenuBar tab={tab} onTabChange={onTabChange} />
                {renderTabPanel()}
            </main>
        </>
    );
}

export default DesignPage;